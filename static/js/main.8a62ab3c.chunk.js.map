{"version":3,"sources":["components/header/header.tsx","components/auto-complete/auto-complete.tsx","components/day-card/daycard.tsx","images/city.png","components/moving-clouds/moving-clouds.tsx","components/home/home.tsx","actions/index.ts","components/favourite-card/favourite-card.tsx","components/favourites/favourites.tsx","App.tsx","reportWebVitals.ts","reducers/favourites.ts","index.tsx"],"names":["Header","className","to","AutoCompleteHandler","props","apiKey","regex","useState","value","setValue","locationData","setLocationData","error","setError","errorRef","useRef","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","getItemValue","item","LocalizedName","items","renderMenu","renderInput","placeholder","renderItem","isHighlighted","style","background","Key","onChange","event","test","target","length","current","focus","axios","get","then","response","data","catch","onSelect","setSelectedCity","ref","tabIndex","role","DayCard","indexAnimation","title","temperature","Maximum","Value","Minimum","MovingClouds","version","x","y","width","height","enableBackground","id","buttonClasses","Home","process","defaultCityKey","state","useLocation","favouritesCities","useSelector","favouriteCity","dispatch","useDispatch","city","setCity","isFavourite","setFavourite","dailyForcast","setDailyForcast","apiError","setApiError","useEffect","handleSelectedCity","cityKey","cityName","callCityData","requestkey","handleCityData","DailyForecasts","updateFavourite","setFavorite","updateCity","favourite","find","favCity","checkIfCityIsInFavourites","Temperature","Metric","weatherText","WeatherText","src","CityImage","alt","onClick","console","log","type","map","day","index","dayName","Date","toString","split","FavouriteCard","handleFavouriteClick","Favourites","navigate","useNavigate","App","AOS","init","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","favouritesReducer","action","filter","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a62ab3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css';\r\n\r\nexport const Header = () => {\r\n\r\n    return <header className=\"app-header flex flex-row justify-between bg-gray-500 shadow-md\">\r\n        <div className=\"app-header-title\">\r\n            <h1>Abra Weather App</h1>\r\n        </div>\r\n        <div className=\"app-header-btns inline-flex\">\r\n            <Link to=\"/\" className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l\">Home</Link>\r\n            <Link to=\"/favourites\" className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r\">Favourites</Link>\r\n        </div>\r\n    </header>\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport Autocomplete from 'react-autocomplete';\r\nimport './auto-complete.css';\r\nimport { Location } from '../../models/location'\r\n\r\ninterface ApiProps {\r\n    apiKey: string;\r\n    setSelectedCity: Function;\r\n}\r\nexport const AutoCompleteHandler = (props: ApiProps) => {\r\n    //component properties\r\n    const apiKey = props.apiKey;\r\n    const regex = /^[a-zA-Z\\s]*$/g;\r\n\r\n    //state declerations\r\n    const [value, setValue] = useState<string>('');\r\n    const [locationData, setLocationData] = useState<Location[]>([]);\r\n    const [error, setError] = useState<string>('');\r\n    const errorRef = useRef<HTMLDivElement>(null);\r\n\r\n    //auto complete handlers\r\n    const handleAutocompleteChange = (event: React.ChangeEvent<any>): void => {\r\n        if (!regex.test(event.target.value) && event.target.value.length >= 0) {\r\n            setError(\"Only english letters please\");\r\n            errorRef.current?.focus();\r\n        } else {\r\n            setError(\"\");\r\n            if(event.target.value.length > 3) {\r\n                axios.get('http://dataservice.accuweather.com/locations/v1/cities/autocomplete/?apikey=' + apiKey + '&q=' +event.target.value)\r\n                .then((response) => {\r\n                    if(response.data.length > 0) {\r\n                        let locationData: Location[]= response.data\r\n                        setLocationData(locationData)\r\n                        \r\n                    }\r\n                 \r\n                })\r\n                .catch((error) => {\r\n                    setError(\"No data was found.. \\n Try to search something else\");\r\n                    errorRef.current?.focus();\r\n                })\r\n            }\r\n        }\r\n        setValue(event.target.value);\r\n    }\r\n    const handleAutocompleteSelect = (value: string, item: Location) => {\r\n        setValue(item.LocalizedName)\r\n        props.setSelectedCity(item.Key, item.LocalizedName)\r\n        return item.LocalizedName;\r\n    }\r\n    return <div className=\"autocomplete-wrapper\">\r\n        <div className=\"autocomplete-wrapper-item\" >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 search-icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n            </svg>\r\n            <Autocomplete\r\n                getItemValue={(item) => item.LocalizedName}\r\n                items={locationData}\r\n                renderMenu={item => (\r\n                    <div className=\"dropdown\">\r\n                        {item}\r\n                    </div>\r\n                )}\r\n                renderInput={(props) => <input {...props} placeholder=\"Search City\" className=\"autocomplete-input\" />}\r\n                renderItem={(item, isHighlighted) =>\r\n                    <div className=\"option\" key={item.Key} style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n                        {item.LocalizedName}\r\n                    </div>\r\n                }\r\n                value={value}\r\n                onChange={handleAutocompleteChange}\r\n                onSelect={handleAutocompleteSelect}\r\n            />\r\n            {error !== \"\" ?\r\n                <div className=\"text-red-700 px-4 py-3 relative error\" ref={errorRef} tabIndex={-1} role=\"alert\">\r\n                    <strong className=\"font-bold\">*{error}</strong>\r\n                </div> : \"\"\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport './daycard.css'\r\nimport {Temperature} from '../../models/temperture'\r\n\r\ninterface DayProps {\r\n    indexAnimation:number;\r\n    title:string;\r\n    temperature:Temperature;\r\n}\r\n\r\nexport const DayCard = (props:DayProps) => {\r\n    return <div className=\"day-card rounded-md shadow-lg border-4 border-light-blue-500 border-opacity-50 text-center\" data-aos=\"fade-right\" data-aos-delay={props.indexAnimation + \"50\"}>\r\n        <div className=\"day-card-title\"><h3>{props.title}</h3></div>\r\n        <div className=\"day-card-desc\">\r\n           <span className=\"font-bold\">Max</span>: {props.temperature.Maximum.Value} &#8451; <br/>\r\n           <span className=\"font-bold\">Min</span>: {props.temperature.Minimum.Value} &#8451;\r\n        </div>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/city.61acb0f3.png\";","import React from 'react';\r\nimport './clouds.css'\r\n\r\nexport const MovingClouds = () => {\r\n    return <div className=\"background\">\r\n    <svg className=\"clouds cloud1\" xmlns=\"http://www.w3.org/2000/svg\"  version=\"1.1\" x=\"0\" y=\"0\" width=\"512\" height=\"512\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\">\r\n     <path id=\"cloud-icon\" d=\"M406.1 227.63c-8.23-103.65-144.71-137.8-200.49-49.05 -36.18-20.46-82.33 3.61-85.22 45.9C80.73 229.34 50 263.12 50 304.1c0 44.32 35.93 80.25 80.25 80.25h251.51c44.32 0 80.25-35.93 80.25-80.25C462 268.28 438.52 237.94 406.1 227.63z\"/>\r\n     </svg>\r\n   <svg className=\"clouds cloud2\" xmlns=\"http://www.w3.org/2000/svg\"  version=\"1.1\" x=\"0\" y=\"0\" width=\"512\" height=\"512\" viewBox=\"0 0 512 512\" enableBackground=\"new 0 0 512 512\">\r\n     <path id=\"cloud-icon\" d=\"M406.1 227.63c-8.23-103.65-144.71-137.8-200.49-49.05 -36.18-20.46-82.33 3.61-85.22 45.9C80.73 229.34 50 263.12 50 304.1c0 44.32 35.93 80.25 80.25 80.25h251.51c44.32 0 80.25-35.93 80.25-80.25C462 268.28 438.52 237.94 406.1 227.63z\"/>\r\n     </svg>\r\n </div>\r\n}","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { City } from '../../models/city';\r\nimport { AutoCompleteHandler } from '../auto-complete/auto-complete';\r\nimport { DayCard } from '../day-card/daycard';\r\nimport CityImage from '../../images/city.png'\r\nimport { DailyForcast } from '../../models/daily-forcast';\r\nimport { addFavourite, removeFavourite } from '../../actions'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { MovingClouds } from '../moving-clouds/moving-clouds';\r\nimport './home.css';\r\n\r\nconst buttonClasses = \"city-container-favourites-btn bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"\r\nexport const Home = () => {\r\n    //component state and properties\r\n    const apiKey = process.env.REACT_APP_WEATHER_API_KEY as string;\r\n    const defaultCityKey: string = \"215854\";\r\n    const defaultCityName: string = \"Tel Aviv\";\r\n    const { state } = useLocation();\r\n    const favouritesCities:City[] = useSelector((state) => state) as City[];\r\n    const favouriteCity = state;\r\n    const dispatch = useDispatch();\r\n    const [city, setCity] = useState<City>();\r\n    const [isFavourite, setFavourite] = useState<boolean>(false);\r\n    const [dailyForcast, setDailyForcast] = useState<DailyForcast[]>([]);\r\n    const [apiError, setApiError] = useState<string>('');\r\n\r\n\r\n    //Send api request only when the Component first loaded\r\n    useEffect(() => {\r\n        //check if city data came from favourite component\r\n        if (favouriteCity) {\r\n            setCity(favouriteCity.city);\r\n            setFavourite(true);\r\n            handleSelectedCity(favouriteCity.city.cityKey, favouriteCity.city.cityName, false);\r\n        } else {\r\n            handleSelectedCity(\"\", defaultCityName);\r\n        }\r\n    }, [])\r\n\r\n\r\n    const checkIfCityIsInFavourites = (cityKey:string):boolean => {\r\n        let favouriteCity = favouritesCities.find((favCity) => favCity.cityKey === cityKey);\r\n        if(favouriteCity){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //component Function handlers\r\n    const handleSelectedCity = (cityKey: string, cityName: string, callCityData: boolean = true) => {\r\n        let requestkey = defaultCityKey;\r\n        if (cityKey !== \"\") requestkey = cityKey;\r\n        if (callCityData) handleCityData(cityKey, cityName);\r\n        //Get 5 day forecasts\r\n        axios.get('http://dataservice.accuweather.com/forecasts/v1/daily/5day/' + requestkey + '?apikey=' + apiKey + '&metric=true')\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    let dailyForcast: DailyForcast[] = response.data.DailyForecasts;\r\n                    setDailyForcast(dailyForcast);\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                setApiError(\"No Data About 5 day forecasts please try different locations\");\r\n                return;\r\n            })\r\n\r\n\r\n    }\r\n    const addFavouriteHandler = () => {\r\n        if (city) {\r\n            updateFavourite(true); \r\n            dispatch(addFavourite(city));  \r\n        }\r\n    \r\n    }\r\n    const removeFavouriteHandler = () => {\r\n        if (city) {\r\n            updateFavourite(false);\r\n            console.log(city.cityKey);\r\n            dispatch(removeFavourite(city));\r\n        }\r\n    }\r\n\r\n    const updateFavourite = (setFavorite: boolean) => {\r\n        let updateCity = city;\r\n        if(updateCity) {\r\n            updateCity.favourite = setFavorite;\r\n            setFavourite(setFavorite);\r\n            setCity(updateCity);\r\n        }\r\n    }\r\n    const handleCityData = (cityKey: string, cityName: string) => {\r\n        let requestkey = defaultCityKey;\r\n        if (cityKey !== \"\") requestkey = cityKey;\r\n        //Get City Data\r\n        axios.get('http://dataservice.accuweather.com/currentconditions/v1/' + requestkey + '?apikey=' + apiKey)\r\n            .then((response) => {\r\n                if(response.data) {\r\n                    let isFavourite = checkIfCityIsInFavourites(requestkey);\r\n                    let city: City = {\r\n                        cityKey: requestkey,\r\n                        cityName: cityName,\r\n                        temperature: response.data[0].Temperature.Metric.Value,\r\n                        weatherText: response.data[0].WeatherText,\r\n                        favourite: isFavourite,\r\n                    }\r\n                    setFavourite(isFavourite);\r\n                    setCity(city);\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setApiError(\"No Data About Location please try different locations\");\r\n                return;\r\n            })\r\n       \r\n\r\n    }\r\n    return <section className=\"home\">\r\n        <AutoCompleteHandler apiKey={apiKey} setSelectedCity={handleSelectedCity} />\r\n        {apiError !== \"\" ? <div className=\"container error-container mx-auto\">{apiError}</div> : <div className=\"container mx-auto city-container\">\r\n            <div className=\"city-container-title flex flex-row justify-between\">\r\n                <h2 className=\"font-bold\" data-aos=\"fade-right\"><img src={CityImage} alt=\"city icon\" />{city ? <span>{city.cityName} <br /> {city.temperature} &#8451;</span> : \"\"}</h2>\r\n                <div className=\"city-container-favourites\" data-aos=\"fade-left\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill={isFavourite ? \"#000\" : \"#fff\"} viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n                    </svg>\r\n                    {isFavourite ? <button onClick={removeFavouriteHandler} className={buttonClasses}>Remove From Favourites</button> : <button onClick={addFavouriteHandler} className={buttonClasses} >Add To Favourites</button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"city-container-image\">\r\n                <MovingClouds></MovingClouds>\r\n            </div>\r\n            <div className=\"city-container-days flex flex-row justify-between\">\r\n                {dailyForcast.length > 0 ? dailyForcast.map((day, index) => {\r\n                    let date = new Date(day.Date);\r\n                    let dayName = date.toString().split(' ')[0];\r\n                    return <DayCard title={dayName} key={dayName + index} temperature={day.Temperature} indexAnimation={index} />\r\n                }) : \"\"}\r\n            </div>\r\n        </div>}\r\n    </section>\r\n}","import { City } from \"../models/city\"\r\n\r\nexport const addFavourite = (cityFavourite:City) => ({\r\n    type: 'ADD_FAVOURITE',\r\n    city:cityFavourite\r\n})\r\n\r\nexport const removeFavourite = (cityFavourite:City) => ({\r\n    type: 'REMOVE_FAVOURITE',\r\n    city:cityFavourite\r\n})\r\n","import React from 'react';\r\nimport { City } from '../../models/city';\r\nimport './favourite-card.css'\r\n\r\ninterface FavouriteCardProps {\r\n    city: City;\r\n    handleFavouriteClick: Function;\r\n}\r\n\r\n\r\nexport const FavouriteCard = (props: FavouriteCardProps) => {\r\n\r\n    //Pass click to parent component\r\n    const handleCardClick = () => {\r\n        props.handleFavouriteClick(props.city);\r\n    }\r\n\r\n    return <div className=\"max-w-sm rounded overflow-hidden shadow-lg favourite-card text-center\" onClick={handleCardClick} data-aos=\"zoom-in\">\r\n        <div className=\"font-bold text-xl mb-2\"><h3 className=\"favourite-card-title\">{props.city.cityName}</h3></div>\r\n        <p className=\"text-gray-700 text-base favourite-card-weather\">\r\n            {props.city.weatherText}\r\n        </p>\r\n        <p className=\"text-gray-700 text-base favourite-card-temperture\">\r\n            {props.city.temperature} &#8451;\r\n        </p>\r\n    </div>\r\n}","import React from 'react';\r\nimport { City } from '../../models/city';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FavouriteCard } from '../favourite-card/favourite-card';\r\nimport './favourites.css'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const Favourites = () => {\r\n    const favouritesCities:City[] = useSelector((state) => state) as City[];\r\n    let navigate = useNavigate();\r\n    //Navigate to Home An Pass The City to home page\r\n    const handleFavouriteClick = (city:City) => {\r\n        navigate(\"/\", { state: { city: city } });\r\n    }\r\n\r\n    return <section className=\"favourites\">\r\n        <div className=\"container favourites-title text-center\">\r\n            <h2 className=\"font-bold\">Your Favourites</h2>\r\n        </div>\r\n        <div className=\"favourites-container container mx-auto\">\r\n            <div className=\"grid sm:grid-cols-3 grid-cols-1 gap-4\">\r\n                {favouritesCities.length > 0 ? favouritesCities.map((city) => {\r\n                  return <FavouriteCard city={city} key={city.cityKey} handleFavouriteClick={handleFavouriteClick}/>\r\n                }): \"\"}\r\n            </div>\r\n        </div>\r\n    </section >\r\n}","import React from 'react';\nimport { Header } from './components/header/header'\nimport './App.css';\nimport {BrowserRouter as Router,Routes, Route,} from \"react-router-dom\";\nimport { Home } from './components/home/home';\nimport { Favourites } from './components/favourites/favourites';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nfunction App() {\n  AOS.init();\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <main>\n          <Routes >\n            <Route path=\"/favourites\"  element={<Favourites />}>\n            </Route>\n            <Route path=\"/\" element={<Home />}>\n            </Route>\n          </Routes >\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { City } from \"../models/city\"\r\n\r\nconst favouritesReducer = (state:City[] = [], action:{city:City,type:string}) => {\r\n    switch (action.type) {\r\n        case 'ADD_FAVOURITE':\r\n            return [ ...state, action.city]\r\n          case 'REMOVE_FAVOURITE':\r\n            return state.filter(city => city.cityKey !== action.city.cityKey);\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default favouritesReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport favouritesReducer from './reducers/favourites'\n\nconst store = createStore(favouritesReducer) \n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}